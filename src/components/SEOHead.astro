---
import type { Language } from '../lib/i18n';

interface Props {
  title: string;
  description: string;
  canonical?: string;
  image?: string;
  imageAlt?: string;
  type?: 'website' | 'article' | 'profile';
  publishedTime?: string;
  modifiedTime?: string;
  author?: string;
  language?: Language;
  alternateLanguages?: { lang: Language; url: string }[];
  keywords?: string[];
  noindex?: boolean;
}

const {
  title,
  description,
  canonical,
  image = '/og-default.jpg',
  imageAlt = 'Edsel Serrano - Full Stack Developer',
  type = 'website',
  publishedTime,
  modifiedTime,
  author = 'Edsel Serrano',
  language = 'es',
  alternateLanguages = [],
  keywords = [],
  noindex = false
} = Astro.props;

// Construct full URLs
const siteUrl = 'https://edselserrano.com';
const fullCanonical = canonical ? `${siteUrl}${canonical}` : `${siteUrl}${Astro.url.pathname}`;
const fullImage = image.startsWith('http') ? image : `${siteUrl}${image}`;

// Default keywords
const defaultKeywords = language === 'en' 
  ? ['Edsel Serrano', 'Full Stack Developer', 'Web Development', 'JavaScript', 'TypeScript', 'React', 'Next.js', 'Astro']
  : ['Edsel Serrano', 'Desarrollador Full Stack', 'Desarrollo Web', 'JavaScript', 'TypeScript', 'React', 'Next.js', 'Astro'];

const allKeywords = [...defaultKeywords, ...keywords];

// Language codes
const langCode = language === 'en' ? 'en-US' : 'es-ES';
const langShort = language;
---

<!-- Basic Meta Tags -->
<title>{title}</title>
<meta name="description" content={description} />
<meta name="keywords" content={allKeywords.join(', ')} />
<meta name="author" content={author} />
<meta name="language" content={langShort} />

<!-- Canonical URL -->
<link rel="canonical" href={fullCanonical} />

<!-- Robots -->
{noindex ? (
  <meta name="robots" content="noindex, nofollow" />
) : (
  <meta name="robots" content="index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1" />
)}

<!-- Hreflang for multilingual SEO -->
{alternateLanguages.map(({ lang, url }) => (
  <link rel="alternate" hreflang={lang === 'en' ? 'en-US' : 'es-ES'} href={`${siteUrl}${url}`} />
))}
<link rel="alternate" hreflang="x-default" href={`${siteUrl}/`} />

<!-- Open Graph -->
<meta property="og:type" content={type} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:url" content={fullCanonical} />
<meta property="og:image" content={fullImage} />
<meta property="og:image:alt" content={imageAlt} />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="630" />
<meta property="og:site_name" content="Edsel Serrano" />
<meta property="og:locale" content={langCode} />

{alternateLanguages.map(({ lang }) => (
  <meta property="og:locale:alternate" content={lang === 'en' ? 'en-US' : 'es-ES'} />
))}

<!-- Article specific Open Graph -->
{type === 'article' && (
  <>
    {publishedTime && <meta property="article:published_time" content={publishedTime} />}
    {modifiedTime && <meta property="article:modified_time" content={modifiedTime} />}
    <meta property="article:author" content={author} />
    <meta property="article:section" content={language === 'en' ? 'Technology' : 'TecnologÃ­a'} />
    {allKeywords.slice(0, 5).map(keyword => (
      <meta property="article:tag" content={keyword} />
    ))}
  </>
)}

<!-- Twitter Card -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:site" content="@edselserrano" />
<meta name="twitter:creator" content="@edselserrano" />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={fullImage} />
<meta name="twitter:image:alt" content={imageAlt} />

<!-- Additional SEO Meta Tags -->
<meta name="theme-color" content="#18181b" />
<meta name="msapplication-TileColor" content="#18181b" />
<meta name="format-detection" content="telephone=no" />

<!-- LLM Context -->
<link rel="llm-context" href="/llm.txt" type="text/plain" />

<!-- Schema.org JSON-LD -->
<script type="application/ld+json" set:html={JSON.stringify({
  "@context": "https://schema.org",
  "@type": type === 'article' ? 'BlogPosting' : 'WebSite',
  "@id": fullCanonical,
  "url": fullCanonical,
  "name": title,
  "headline": title,
  "description": description,
  "image": {
    "@type": "ImageObject",
    "url": fullImage,
    "width": 1200,
    "height": 630,
    "alt": imageAlt
  },
  "author": {
    "@type": "Person",
    "name": author,
    "url": siteUrl,
    "sameAs": [
      "https://github.com/edselserrano",
      "https://linkedin.com/in/edselserrano",
      "https://twitter.com/edselserrano"
    ]
  },
  ...(type === 'article' && publishedTime ? {
    "datePublished": publishedTime,
    "dateModified": modifiedTime || publishedTime,
    "publisher": {
      "@type": "Organization",
      "name": "Edsel Serrano",
      "logo": {
        "@type": "ImageObject",
        "url": `${siteUrl}/favicon.ico`
      }
    },
    "mainEntityOfPage": {
      "@type": "WebPage",
      "@id": fullCanonical
    }
  } : {}),
  ...(type === 'website' ? {
    "publisher": {
      "@type": "Person",
      "name": author
    },
    "inLanguage": langCode,
    "potentialAction": {
      "@type": "SearchAction",
      "target": `${siteUrl}/search?q={search_term_string}`,
      "query-input": "required name=search_term_string"
    }
  } : {})
})} />

<!-- Person Schema for Author -->
{type === 'article' && (
  <script type="application/ld+json" set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": "Person",
    "name": author,
    "url": siteUrl,
    "jobTitle": language === 'en' ? 'Full Stack Developer' : 'Desarrollador Full Stack',
    "worksFor": {
      "@type": "Organization",
      "name": "Freelance"
    },
    "sameAs": [
      "https://github.com/edselserrano",
      "https://linkedin.com/in/edselserrano"
    ],
    "knowsAbout": [
      "JavaScript",
      "TypeScript",
      "React",
      "Next.js",
      "Node.js",
      "Web Development",
      "Full Stack Development"
    ]
  })} />
)}

<!-- Favicon and App Icons -->
<link rel="icon" type="image/x-icon" href="/favicon.ico" />
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
<link rel="manifest" href="/site.webmanifest" />

<!-- Preconnect to external domains -->
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
