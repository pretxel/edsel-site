---
const { id } = Astro.params;
import Layout from "../../../layouts/BlogLayout.astro";
import { posts, getPostContent, getLocalizedPost, getLocalizedPosts } from "../../../lib/data";
import { t, formatDate, formatDateShort } from "../../../lib/i18n";
import LanguageSwitcher from "../../../components/LanguageSwitcher.astro";

const currentLanguage = 'en';
const post = posts.find((post) => post.id === id);

// Handle 404 case
if (!post) {
  return Astro.redirect('/404');
}

// Get localized content
const localizedPost = getLocalizedPost(post, currentLanguage);
const allLocalizedPosts = getLocalizedPosts(currentLanguage);

// Get related posts (simple implementation)
const relatedPosts = allLocalizedPosts.filter(p => p.id !== post.id).slice(0, 3);
---

<Layout image={post.cover} title={localizedPost.title}>
  <article class="min-h-screen">
    <!-- Header Navigation -->
    <div class="absolute top-4 left-4 right-4 z-50">
      <div class="flex justify-between items-center">
        <!-- Home Button -->
        <a
          href="/"
          class="inline-flex items-center px-4 py-2 text-sm font-medium text-zinc-300 hover:text-white bg-zinc-800/50 hover:bg-zinc-700/50 rounded-lg border border-zinc-700/50 hover:border-zinc-600/50 transition-all duration-200 group backdrop-blur-sm"
        >
          <svg class="w-4 h-4 mr-2 transform group-hover:-translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
          </svg>
          Home
        </a>

        <!-- Language Switcher -->
        <LanguageSwitcher currentLanguage={currentLanguage} currentPath={Astro.url.pathname} />
      </div>
    </div>

    <!-- Navigation Header -->
    <header class="sticky top-0 z-40 bg-zinc-900/80 backdrop-blur-xl border-b border-zinc-800/50">
      <div class="max-w-4xl mx-auto px-6 py-4">
        <div class="flex items-center justify-between">
          <a
            href="/en/blog"
            class="inline-flex items-center text-zinc-400 hover:text-white transition-colors duration-200 group"
          >
            <svg class="w-5 h-5 mr-2 transform group-hover:-translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
            {t('nav.back_to_blog', {}, currentLanguage)}
          </a>
          
          <!-- Share Buttons -->
          <div class="flex items-center space-x-3">
            <button 
              onclick="navigator.share({title: document.title, url: window.location.href})"
              class="p-2 text-zinc-400 hover:text-white hover:bg-zinc-800 rounded-full transition-all duration-200"
              aria-label={t('post.share_article', {}, currentLanguage)}
            >
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
              </svg>
            </button>
          </div>
        </div>
      </div>
    </header>

    <!-- Hero Section -->
    <div class="relative overflow-hidden">
      <!-- Background Image -->
      <div class="absolute inset-0 z-0">
        <img
          src={post.cover}
          alt={localizedPost.title}
          class="w-full h-full object-cover"
          transition:name=`blog ${post.id} image`
        />
        <div class="absolute inset-0 bg-gradient-to-t from-zinc-900 via-zinc-900/60 to-zinc-900/20"></div>
      </div>

      <!-- Content -->
      <div class="relative z-10 px-6 py-24 sm:py-32">
        <div class="max-w-4xl mx-auto">
          <!-- Category Badge -->
          <div class="mb-6">
            <span 
              class="inline-block px-4 py-2 text-sm font-semibold text-white rounded-full shadow-lg"
              style={`background: ${post.color.accent}`}
            >
              {t('category.project_showcase', {}, currentLanguage)}
            </span>
          </div>

          <!-- Title -->
          <h1 
            class="text-4xl sm:text-5xl lg:text-6xl font-bold text-white mb-6 leading-tight"
            transition:name=`blog ${post.id} title`
          >
            {localizedPost.title}
          </h1>

          <!-- Metadata -->
          <div class="flex flex-col sm:flex-row sm:flex-wrap sm:items-center gap-4 sm:gap-6 text-zinc-300 mb-8">
            <div class="flex items-center">
              <svg class="w-5 h-5 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path>
              </svg>
              <span>{t('post.by_author', { author: post.author }, currentLanguage)}</span>
            </div>
            <div class="flex items-center">
              <svg class="w-5 h-5 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
              </svg>
              <time datetime={post.date}>
                {formatDate(post.date, currentLanguage)}
              </time>
            </div>
            <div class="flex items-center">
              <svg class="w-5 h-5 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              <span>5 {t('post.min_read', {}, currentLanguage)}</span>
            </div>
          </div>

          <!-- Description -->
          <p class="text-xl text-zinc-200 leading-relaxed max-w-3xl">
            {localizedPost.description || localizedPost.content.substring(0, 200) + '...'}
          </p>
        </div>
      </div>
    </div>

    <!-- Content Section -->
    <div class="relative bg-zinc-900">
      <div class="max-w-4xl mx-auto px-6 py-16">
        <div class="prose prose-lg prose-invert prose-zinc max-w-none">
          <!-- Main Content -->
          <div class="bg-zinc-800/50 rounded-2xl p-8 mb-8 backdrop-blur-sm border border-zinc-700/50">
            <div class="space-y-6">
              <p class="text-lg text-zinc-200 leading-relaxed">
                {localizedPost.content}
              </p>
              
              {localizedPost.content_p2 && (
                <p class="text-lg text-zinc-200 leading-relaxed">
                  {localizedPost.content_p2}
                </p>
              )}

              <!-- Project Link -->
              {post.link && (
                <div class="mt-8 p-6 bg-gradient-to-r from-zinc-800 to-zinc-700 rounded-xl border border-zinc-600/50">
                  <h3 class="text-xl font-bold text-white mb-3">{t('post.check_it_out', {}, currentLanguage)}</h3>
                  <p class="text-zinc-300 mb-4">{t('post.visit_project', {}, currentLanguage)}</p>
                  <a
                    href={post.link}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="inline-flex items-center px-6 py-3 bg-white text-black font-semibold rounded-lg hover:bg-gray-100 transition-all duration-200 group"
                  >
                    {t('post.visit_button', { title: localizedPost.title }, currentLanguage)}
                    <svg class="w-5 h-5 ml-2 transform group-hover:translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                    </svg>
                  </a>
                </div>
              )}
            </div>
          </div>

          <!-- Tags Section -->
          <div class="mb-12">
            <h3 class="text-lg font-semibold text-white mb-4">{t('post.technologies_used', {}, currentLanguage)}</h3>
            <div class="flex flex-wrap gap-2">
              {['React', 'TypeScript', 'Tailwind CSS', 'Astro'].map((tag) => (
                <span class="px-3 py-1 bg-zinc-700 text-zinc-300 rounded-full text-sm">
                  {tag}
                </span>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Related Posts Section -->
    {relatedPosts.length > 0 && (
      <section class="bg-zinc-800/30 py-16">
        <div class="max-w-7xl mx-auto px-6">
          <div class="text-center mb-12">
            <h2 class="text-3xl font-bold text-white mb-4">{t('post.more_projects', {}, currentLanguage)}</h2>
            <p class="text-zinc-400">{t('post.more_projects_description', {}, currentLanguage)}</p>
          </div>
          
          <div class="grid gap-6 sm:gap-8 grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
            {relatedPosts.map((relatedPost) => (
              <article class="group relative bg-zinc-800/50 backdrop-blur-sm rounded-xl overflow-hidden border border-zinc-700/50 hover:border-zinc-600/50 transition-all duration-300 hover:shadow-xl hover:-translate-y-1">
                <div class="aspect-[16/10] relative overflow-hidden">
                  <img
                    src={relatedPost.cover}
                    alt={relatedPost.title}
                    class="object-cover w-full h-full transition-transform duration-500 group-hover:scale-105"
                    loading="lazy"
                  />
                </div>
                <div class="p-4 sm:p-6">
                  <h3 class="text-base sm:text-lg font-bold text-white mb-2 group-hover:text-blue-400 transition-colors duration-200">
                    {relatedPost.title}
                  </h3>
                  <p class="text-zinc-400 text-sm mb-4 line-clamp-2">
                    {relatedPost.description || relatedPost.content}
                  </p>
                  <div class="text-xs text-zinc-500">
                    {formatDateShort(relatedPost.date, currentLanguage)}
                  </div>
                </div>
                <a
                  href={`/en/blog/${relatedPost.id}`}
                  class="absolute inset-0"
                  aria-label={t('post.read_article', { title: relatedPost.title }, currentLanguage)}
                >
                  <span class="sr-only">{t('post.read_article', { title: relatedPost.title }, currentLanguage)}</span>
                </a>
              </article>
            ))}
          </div>
        </div>
      </section>
    )}

    <!-- Back to Top Button -->
    <button
      onclick="window.scrollTo({top: 0, behavior: 'smooth'})"
      class="fixed bottom-8 right-8 p-3 bg-zinc-800 hover:bg-zinc-700 text-white rounded-full shadow-lg transition-all duration-200 opacity-0 z-50"
      id="back-to-top"
      aria-label={t('post.back_to_top', {}, currentLanguage)}
    >
      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"></path>
      </svg>
    </button>
  </article>
</Layout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .prose {
    max-width: none;
  }
  
  .prose p {
    margin-bottom: 1.5rem;
    line-height: 1.7;
  }

  .prose h3 {
    color: white;
    font-weight: 700;
    margin-bottom: 1rem;
  }
</style>

<script>
  // Back to top button functionality
  const backToTopButton = document.getElementById('back-to-top');
  
  window.addEventListener('scroll', () => {
    if (window.scrollY > 400) {
      backToTopButton?.classList.remove('opacity-0');
      backToTopButton?.classList.add('opacity-100');
    } else {
      backToTopButton?.classList.add('opacity-0');
      backToTopButton?.classList.remove('opacity-100');
    }
  });

  // Enhanced sharing for browsers that don't support navigator.share
  window.addEventListener('load', () => {
    const shareButtons = document.querySelectorAll('[onclick*="navigator.share"]');
    shareButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        if (!navigator.share) {
          e.preventDefault();
          // Fallback: copy URL to clipboard
          navigator.clipboard.writeText(window.location.href).then(() => {
            // Could show a toast notification here
            console.log('URL copied to clipboard');
          });
        }
      });
    });
  });
</script>
